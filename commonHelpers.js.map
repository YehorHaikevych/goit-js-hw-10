{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst button = document.querySelector('button');\nbutton.disabled = true;\nconst input = document.querySelector('input');\nlet userSelectedDate;\nlet timerId;\n\nconst inputDate = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() > Date.now()) {\n      userSelectedDate = selectedDates[0].getTime();\n      button.disabled = false;\n    } else {\n      iziToast.error({\n        titleColor: '#fff',\n        message: 'Please choose a date in the future',\n        messageColor: '#fff',\n        color: '#ef4040',\n        position: 'topRight',\n      });\n      button.disabled = true;\n    }\n  },\n});\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  input.disabled = true;\n  startTimer();\n});\n\nfunction startTimer() {\n  timerId = setInterval(() => {\n    const timeLeft = userSelectedDate - Date.now();\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      iziToast.info({\n        message: 'Time is up!',\n        position: 'topCenter',\n      });\n      input.disabled = false;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeLeft);\n      document.querySelector('[data-days]').textContent = addLeadingZero(days);\n      document.querySelector('[data-hours]').textContent =\n        addLeadingZero(hours);\n      document.querySelector('[data-minutes]').textContent =\n        addLeadingZero(minutes);\n      document.querySelector('[data-seconds]').textContent =\n        addLeadingZero(seconds);\n    }\n  }, 1000);\n}\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","button","input","userSelectedDate","timerId","flatpickr","selectedDates","iziToast","startTimer","timeLeft"],"mappings":"+IAMA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAClB,MAAMC,EAAQ,SAAS,cAAc,OAAO,EAC5C,IAAIC,EACAC,EAEcC,EAAU,mBAAoB,CAC9C,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCH,EAAmBG,EAAc,CAAC,EAAE,QAAO,EAC3CL,EAAO,SAAW,KAElBM,EAAS,MAAM,CACb,WAAY,OACZ,QAAS,qCACT,aAAc,OACd,MAAO,UACP,SAAU,UAClB,CAAO,EACDN,EAAO,SAAW,GAErB,CACH,CAAC,EAEDA,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjBM,GACF,CAAC,EAED,SAASA,GAAa,CACpBJ,EAAU,YAAY,IAAM,CAC1B,MAAMK,EAAWN,EAAmB,KAAK,IAAG,EAE5C,GAAIM,GAAY,EACd,cAAcL,CAAO,EACrBG,EAAS,KAAK,CACZ,QAAS,cACT,SAAU,WAClB,CAAO,EACDL,EAAM,SAAW,OACZ,CACL,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUgB,CAAQ,EAC5D,SAAS,cAAc,aAAa,EAAE,YAAcV,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YACrCI,EAAeH,CAAK,EACtB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CACzB,CACF,EAAE,GAAI,CACT"}